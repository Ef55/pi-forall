-- Simple examples demonstrating parametric polymorphism in core language

module Lec1 where

id : (x:Type) -> x -> x
id = \x y . y 

idid : ((x:Type) -> (y : x) -> x) 
idid = id ((x:Type) -> (y : x) -> x) id

compose : (A : Type) -> (B : Type) -> (C:Type) ->
  (B -> C) -> (A -> B) -> (A -> C)
compose = \ A B C f g x. (f (g x))

-- void type

void : Type
void = (x:Type) -> x

-- inhabited by diverging term

loop : (x:Type) -> x
loop = loop

-- unit type 

unit : Type
unit = (x:Type) -> x -> x

